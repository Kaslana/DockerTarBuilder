name: Get-ARM32-Docker-Images-Release(gzip)

on:
  workflow_dispatch:
    inputs:
      docker_images:
        description: '请填写docker镜像名称:(多个镜像请用英文逗号分开)'
        required: true

jobs:
  pull_and_package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Pull Docker Images and Package
        run: |
          images="${{ github.event.inputs.docker_images }}"
          IFS=',' read -r -a image_array <<< "$images"
          for image in "${image_array[@]}"; do
            docker pull "${image}" --platform "linux/arm/v7"
            image_name="${image//\//_}"
            image_name="${image_name//:/_}"
            docker save "${image}" -o "${image_name}_arm32.tar"
            gzip --version
            gzip --stdout --force --name --verbose --best "${image_name}_arm32.tar" > "${image_name}_arm32.tar.gz"
            rm "${image_name}_arm32.tar"
          done

      - name: List generated files (debug step)
        run: |
          echo "Preparing docker images list (.tar.gz) files:"
          find $GITHUB_WORKSPACE -name "*.tar.gz"
          release_name=$(TZ="Asia/Shanghai" date +'%Y-%m-%d %H:%M Build')
          echo "RELEASE_NAME=$release_name" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@master
        with:
          tag_name: DockerTarBuilder-ARM32
          name: ${{ env.RELEASE_NAME }} gzip for ARM32
          body: |
            ### 使用镜像压缩包
            > 在导入镜像压缩包时:
            > 导入 **.tar.xz** 的镜像压缩包需要 **xz** 命令
            > 导入 **.tar.gz** 的镜像压缩包需要 **gzip** 命令
            ``` shell
            docker load -i Docker_Images_Archive
            ```
            ### Docker导出镜像压缩包命令
            ``` shell
            # gzip
            docker image save repository:tag | gzip --stdout --force --name --verbose --best > repository_tag.tar.gz
            # xz
            docker image save repository:tag | xz --compress --format=xz -9 --extreme --threads=0 --verbose --verbose > repository_tag.tar.xz
            ```
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Docker images as release assets
        uses: softprops/action-gh-release@v2.1.0
        with:
          tag_name: DockerTarBuilder-ARM32
          files: ${{ github.workspace }}/*.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
